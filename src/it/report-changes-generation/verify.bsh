
/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

import java.io.*;
import java.nio.file.*;
import java.util.*;
import java.util.jar.*;

boolean result = true;

try
{
    File report = new File( basedir, "target/site/changes-report.html" );
    if ( !report.exists() )
    {
        System.err.println( "report file is missing." );
        return false;
    }
    if ( report.isDirectory() )
    {
        System.err.println( "report is directory." );
        return false;
    }
    String reportContent = new String(Files.readAllBytes( report.toPath() ), "UTF-8");

    int indexOf = reportContent.indexOf( "Changes" );
    if ( indexOf < 0 )
    {
      System.err.println( "changes-report.html doesn't contain Changes title" );
      return false;
    }

    indexOf = reportContent.indexOf( "href=\"http://myjira/browse/MCHANGES-88\"" );
    if ( indexOf < 0 )
    {
      System.err.println( "changes-report.html doesn't contain jira issue link" );
      return false;
    }

    // Test for output problem caused by only using <dueTo> elements
    indexOf = reportContent.indexOf( "Thanks to , " );
    if ( indexOf != -1 )
    {
      System.err.println( "changes-report.html has too many dueTos in the Map" );
      return false;
    }

    // Tests output problems caused by only using <fixes> element
    indexOf = reportContent.indexOf( "bug-12345" );
    if ( indexOf < 0 )
    {
      System.err.println( "changes-report.html doesn't contain issue text for issue specified with <fixes> element" );
      return false;
    }
    indexOf = reportContent.indexOf( "Fixes ." );
    if ( indexOf != -1 )
    {
      System.err.println( "changes-report.html doesn't handle empty fixes attribute properly" );
      return false;
    }

}
catch( Throwable e )
{
    e.printStackTrace();
    result = false;
}

return result;
